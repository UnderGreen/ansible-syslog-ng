{# A macro to get  a statement name from hostname, type and proto #}
{% macro generate_statement_name(hostname, type, proto) -%}
{% set first_letter = type[0] %}
{% set statement_name = hostname|replace(".", "_")|replace('"', '') %}
{{first_letter}}_{{statement_name}}_{{proto}} 
{%- endmacro %}

{# A macro to get the right first parameter in a source or destination #}
{% macro get_hostname_parameter(hostname, type) -%}
{% if type == "source" %}
ip({{hostname}}),
{% else %}
{{hostname}},
{% endif %}
{%- endmacro -%}

{# A general macro which generates source or destination statements from dictionaries #}
{% macro generate_statements(statements, type) -%}
{% for item in statements %}
{% set hostname = item.keys()[0] %}
{% set options = item[hostname] %}
{{type}} {{ generate_statement_name(hostname, type, options.proto) }} {
{% if options.proto != "tls" %}
  {{options.proto}}(
    {{ get_hostname_parameter(hostname, type) }}
    port({{options.port}})
{% else %}
  tcp(
    {{ get_hostname_parameter(hostname, type) }}
    port({{options.port}}),
    tls(
      ca_dir({{options.ca_dir}})
      key_file({{options.key_file}})
      cert_file({{options.cert_file}})
    )
{% endif %}
  );
};

{% endfor %}
{%- endmacro %}

{# Generate sources from dictionaries, like syslog_ng_client_destinations #}
{% macro generate_sources(statements) -%}
{{ generate_statements(statements, "source") }}
{%- endmacro %}

{# Generate sources from dictionaries, like syslog_ng_client_destinations #}
{% macro generate_destinations(statements) -%}
{{ generate_statements(statements, "destination") }}
{%- endmacro %}

{# Generate filter references in a logpath #}
{%- macro generate_filters_in_logpath(filters) -%}
{% if filters|length >= 1 %}
{% for item in filters %}
  filter({{item}});
{% endfor %}
{% endif %}
{%- endmacro -%}


{# Generate log statements #}
{% macro generate_logpaths(statements, type) -%}
{% for item in statements %}
{% set hostname = item.keys()[0] %}
{% set options = item[hostname] %}
log {
{% if type == "destination" %}
  source(s_local);
{{ generate_filters_in_logpath(options) }}
  destination({{ generate_statement_name(hostname, type, options.proto) }});
{% else %}
  source({{ generate_statement_name(hostname, type, options.proto) }});
{{ generate_filters_in_logpath(options.filters|default([])) }}
  destination(d_local);
{% endif %}
};

{% endfor %}
{%- endmacro %}


